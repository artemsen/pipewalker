name: MinGW
on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      BUILD_PATH: .build

    steps:
    - name: Install base environment
      run: >
          sudo apt install --no-install-recommends --yes
          wget ca-certificates python3-pip ninja-build
          g++-mingw-w64-x86-64 mingw-w64-tools
    - name: Install meson
      run: pip3 install meson
    - name: Install SDL2-MinGW
      run: |
        mkdir -p /tmp/sdl
        wget -qO- https://github.com/libsdl-org/SDL/releases/download/release-2.30.11/SDL2-devel-2.30.11-mingw.tar.gz | tar -xz --strip-components 1 -C /tmp/sdl
        sudo make CROSS_PATH=/usr -C /tmp/sdl cross
        mkdir -p /tmp/sdl_image
        wget -qO- https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.4/SDL2_image-devel-2.8.4-mingw.tar.gz | tar -xz --strip-components 1 -C /tmp/sdl_image
        sudo make CROSS_PATH=/usr -C /tmp/sdl_image cross

    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: echo "VERSION=$(git describe --tags --long --always | sed 's/^v//;s/-/./')" >> $GITHUB_OUTPUT

    - name: Build
      id: build
      run: |
        meson -Dversion=${{ steps.version.outputs.VERSION }} \
              --buildtype=release \
              --cross-file=.github/workflows/mingw.txt \
              --prefix=/ \
              ${{ env.BUILD_PATH }}
        ninja -C ${{ env.BUILD_PATH }}

    - name: Install
      id: install
      run: |
        DESTDIR=install ninja -C ${{ env.BUILD_PATH }} install
        install --strip --strip-program=x86_64-w64-mingw32-strip --mode=644 \
          --target-directory=${{ env.BUILD_PATH }}/install/PipeWalker-${{ steps.version.outputs.VERSION }} \
          /usr/lib/gcc/x86_64-w64-mingw32/13-win32/libgcc_s_seh-1.dll \
          /usr/lib/gcc/x86_64-w64-mingw32/13-win32/libstdc++-6.dll \
          /usr/x86_64-w64-mingw32/bin/SDL2.dll \
          /usr/x86_64-w64-mingw32/bin/SDL2_image.dll

    - name: Upload dist
      uses: actions/upload-artifact@v4
      with:
        name: pipewalker-${{ steps.version.outputs.VERSION }}-win64
        path: ${{ env.BUILD_PATH }}/install
